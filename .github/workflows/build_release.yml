name: Создание релиза

on:
    workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
            - run: npm ci
            - run: npm run test

    eslint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
            - run: npm ci
            - run: npm run lint

    build-docker-image:
        needs: [test, eslint]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Yandex Container Registry login
              run: echo ${{ secrets.OAUTH }} | docker login --username oauth --password-stdin cr.yandex

            - name: Build Docker images
              run: |
                  docker build -t cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ github.run_number }} .
                  docker tag cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ github.run_number }} cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ github.run_number }}_latest
                  docker push cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ github.run_number }}
                  docker push cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ github.run_number }}_latest

    create-issue:
        runs-on: ubuntu-latest
        needs: build-docker-image
        steps:
            - uses: actions/checkout@v4
            - name: Get previous release tag
              id: get-previous-tag
              run: echo "PREV_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

            - name: Get latest commits
              id: get_commits
              run: echo "COMMITS=$(git log pretty=format:"%h - %s" ${env.PREV_TAG}..HEAD)" >> $GITHUB_ENV

            - name: Create GitHub issue
              uses: actions/github-script@v7
              with:
                  script: |
                      const today = new Date().toISOString().split('T')[0];
                      const issueTitle = `Release v${{ github.run_number }}`;
                      const issueBody = `
                        **Дата:** ${today}
                        **Автор:** ${{ github.actor }}
                        **Версия:** v${{ github.run_number }}
                        **Список коммитов:**
                        ${env.COMMITS}
                        **Docker образ:** [Ссылка](https://cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app:${{ github.run_number }})
                      `;
                      github.rest.issues.create({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        title: issueTitle,
                        body: issueBody
                      });

    update-changelog:
        runs-on: ubuntu-latest
        needs: create-issue
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Get previous release tag
              id: get-previous-tag
              run: echo "PREV_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

            - name: Get latest commits
              id: get_commits
              run: |
                  echo "COMMITS=$(git log pretty=format:"%h - %s" ${env.PREV_TAG}..HEAD)" >> $GITHUB_ENV

            - name: Update CHANGELOG.md
              run: |
                  echo "## Realese v${{ github.run_number }} - $(date +'%Y-%m-%d')" > temp_changelog.md
                  echo -e "${env.COMMITS}\n" >> temp_changelog.md
                  cat CHANGELOG.md >> temp_changelog.md
                  mv temp_changelog.md CHANGELOG.md
                  git config --global user.name "${{ github.actor }}"
                  git config --global user.email "${{ github.actor }}@test.ru"
                  git add CHANGELOG.md
                  git commit -m "Update CHANGELOG.md for v${{ github.run_number }}"
                  git push origin main

    create-release-branch-and-tag:
        needs: update-changelog
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Set up Git user
              run: |
                  git config --global user.name "${{ github.actor }}"
                  git config --global user.email "${{ github.actor }}@test.ru"
            - name: Create release branch
              run: |
                  git checkout -b releases/${{ github.run_number }}
                  git push origin releases/${{ github.run_number }}
            - name: Create release tag
              run: |
                  git tag -a v${{ github.run_number }} -m "Release v${{ github.run_number }}"
                  git push origin --tags
